{"version":3,"file":"static/js/76.f016373d.chunk.js","mappings":"wNAAaA,EAAa,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAM3B,OACE,0BACE,kBAAMC,OAAO,GAAGC,SAPC,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,cAAcC,SAASC,MAAMC,MAAMC,OACzDV,EAAkBK,EACnB,EAGG,WACE,kBAAOM,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAIP,E,iBC0BD,EAlCe,WAAO,IAAD,EACnB,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAmBH,GAChBI,MAAK,SAAAT,GAAM,OAAIC,EAAUD,EAAd,IACXU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAApB,GACb,GAAE,CAACT,IAOJ,OACE,4BACE,SAACpB,EAAD,CAAYC,kBAPU,SAAA6B,GAExBX,EAD6B,KAAVW,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAKG,yBACGf,IACEA,EAAOgB,OAAS,GACf,SAACC,EAAA,EAAD,CAAWjB,OAAQA,KAEnB,uDAKX,C,sNC7BDkB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,kCACxBC,EACM,uBADNA,EAEI,gBAFJA,EAGU,UAGHC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAUG,GADF,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBjB,EAAkB,mCAAG,WAAMH,GAAN,gFAC1BqB,EAAU,CACdC,OAAQ,CAAEZ,MAAOV,IAFa,SAITa,EAAAA,EAAAA,IAAUG,EAAwBK,GAJzB,cAI1BH,EAJ0B,yBAKzBA,EAASC,KAAKC,SALW,2CAAH,sDAQlBG,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,EAAAA,IAAUG,EAA+BQ,GADnC,cACvBN,EADuB,OAE7BX,QAAQC,IAAIU,EAASC,MAFQ,kBAGtBD,EAASC,MAHa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMD,GAAN,uFACNX,EAAAA,EAAAA,IACrBG,EAA+BQ,EAAK,YAFT,cACvBN,EADuB,OAI7BX,QAAQC,IAAIU,EAASC,KAAKC,SAJG,kBAKtBF,EAASC,KAAKC,SALQ,2CAAH,sDAQfM,EAAY,mCAAG,WAAMF,GAAN,uFACHX,EAAAA,EAAAA,IACrBG,EAA+BQ,EAAK,YAFZ,cACpBN,EADoB,OAI1BX,QAAQC,IAAIU,EAASC,KAAKQ,MAJA,kBAKnBT,EAASC,KAAKQ,MALK,2CAAH,qD,oDCjCzB,IAdkB,SAAC,GAAgB,IAAdhC,EAAa,EAAbA,OACbiC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACGlC,EAAOmC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMP,IAAMS,MAAO,CAAEC,KAAMN,GAAhD,SACGG,EAAM1C,SAFF0C,EAAMP,GADA,KAStB,C","sources":["components/SearchForm.jsx","Pages/Movies.jsx","Services/Api.jsx","components/MovieList.jsx"],"sourcesContent":["export const SearchForm = ({ updateQueryString }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.currentTarget.elements.title.value.trim();\n    updateQueryString(searchQuery);\n  };\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"title\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm';\nimport { getSearchingMovies } from 'Services/Api';\nimport MovieList from 'components/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchFilm = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchFilm) {\n      return;\n    }\n    getSearchingMovies(searchFilm)\n      .then(movies => setMovies(movies))\n      .catch(err => console.log(err.message));\n  }, [searchFilm]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <SearchForm updateQueryString={updateQueryString} />\n      <div>\n        {movies &&\n          (movies.length > 0 ? (\n            <MovieList movies={movies} />\n          ) : (\n            <b>There is no such movie</b>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","// 1efdf9e7a9ff7e2165fc0b365172fcf9\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '1efdf9e7a9ff7e2165fc0b365172fcf9',\n};\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst URLSearchParams = {\n  trending: '/trending/movie/week',\n  search: '/search/movie',\n  movieDetails: '/movie/',\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(URLSearchParams.trending);\n  return response.data.results;\n};\n\nexport const getSearchingMovies = async searchFilm => {\n  const options = {\n    params: { query: searchFilm },\n  };\n  const response = await axios.get(URLSearchParams.search, options);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(URLSearchParams.movieDetails + id);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    URLSearchParams.movieDetails + id + '/reviews'\n  );\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    URLSearchParams.movieDetails + id + '/credits'\n  );\n  console.log(response.data.cast);\n  return response.data.cast;\n};\n","import { Link, useLocation } from 'react-router-dom';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </div>\n  );\n};\nexport default MovieList;\n"],"names":["SearchForm","updateQueryString","action","onSubmit","e","preventDefault","searchQuery","currentTarget","elements","title","value","trim","type","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchFilm","get","useEffect","getSearchingMovies","then","catch","err","console","log","message","query","length","MovieList","axios","api_key","IMAGE_BASE_URL","URLSearchParams","getTrendingMovies","response","data","results","options","params","getMovieDetails","id","getMovieReviews","getMovieCast","cast","location","useLocation","map","movie","to","state","from"],"sourceRoot":""}